AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: According to the scan result from the scanner, publish the malware information to the target SNS topic.

Parameters:
  ScanResultTopicARN:
    Type: String
    Description: The ARN of the scan result SNS topic in storage stack.
  TargetSnsTopicArn:
    Type: String
    Description: The ARN for the SNS topic to which malware information publish. Will create a new SNS Topic if this value is empty.
    Default: ''

Conditions:
  NeedCreateNewSnsTopic: !Equals
    - !Ref TargetSnsTopicArn
    - ''

Resources:
  TargetSnsTopic:
    Type: AWS::SNS::Topic
    Condition: NeedCreateNewSnsTopic
    Properties:
      DisplayName: Malware notification
  PublishMalwarePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - sns:Publish
              - account:GetAlternateContact
            Resource: '*'
  PublishMalwareRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - !Ref PublishMalwarePolicy
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  PublishMalwareLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: handler.lambda_handler
      Runtime: python3.9
      Timeout: 30
      Role: !GetAtt
        - PublishMalwareRole
        - Arn
      Environment:
        Variables:
          TARGET_SNS_ARN: !If [ NeedCreateNewSnsTopic, !Ref TargetSnsTopic, !Ref TargetSnsTopicArn ]
      MemorySize: 128
  TopicSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: lambda
      Endpoint: !GetAtt PublishMalwareLambda.Arn
      TopicArn: !Ref ScanResultTopicARN
      DeliveryPolicy:
        healthyRetryPolicy:
          numRetries: 6
          minDelayTarget: 5
          maxDelayTarget: 60
          numMinDelayRetries: 2
          numMaxDelayRetries: 2
          numNoDelayRetries: 2
          backoffFunction: exponential
  InvokedLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt PublishMalwareLambda.Arn
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn: !Ref ScanResultTopicARN
