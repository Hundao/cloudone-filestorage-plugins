.PHONY: zip

MKDIR := mkdir
ZIP := zip

zip:
	$(MKDIR) -p zip
	$(ZIP) zip/send-malware-to-sns.zip handler.py

create-target-sns-topic:
	aws sns create-topic --name $(TARGET_SNS_TOPIC_NAME)

create-publish-malware-policy:
	aws iam create-policy \
	--policy-name $(PUBLISH_MALWARE_POLICY_NAME) \
	--policy-document "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"VisualEditor0\",\"Effect\":\"Allow\",\"Action\":[\"sns:Publish\",\"account:GetAlternateContact\"],\"Resource\":\"*\"}]}"

create-publish-malware-role:
	aws iam create-role \
	--role-name $(PUBLISH_MALWARE_ROLE_NAME) \
	--assume-role-policy-document "{\"Version\": \"2012-10-17\",\"Statement\": [{\"Action\": \"sts:AssumeRole\",\"Effect\": \"Allow\",\"Principal\": {\"Service\": \"lambda.amazonaws.com\"}}]}"

attach-policy:
	aws iam attach-role-policy \
	--role-name $(PUBLISH_MALWARE_ROLE_NAME) \
	--policy-arn arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

	aws iam attach-role-policy \
	--role-name $(PUBLISH_MALWARE_ROLE_NAME) \
	--policy-arn $(PUBLISH_MALWARE_POLICY_ARN)

create-function: zip
	aws lambda create-function \
	--function-name $(PUBLISH_MALWARE_LAMBDA_NAME) \
	--role $(PUBLISH_MALWARE_ROLE_ARN) \
	--runtime python3.9 \
	--timeout 30 \
	--memory-size 128 \
	--handler handler.lambda_handler \
	--environment Variables=\{TARGET_SNS_ARN=$(TARGET_SNS_TOPIC_ARN)\} \
	--zip-file fileb://zip/send-malware-to-sns.zip

subscribe-to-sns-topic:
	aws sns subscribe \
	--topic-arn $(SCAN_RESULT_TOPIC_ARN) \
	--protocol lambda \
	--notification-endpoint $(PUBLISH_MALWARE_LAMBDA_ARN) \
	--region $(REGION)

add-lambda-permission:
	aws lambda add-permission \
	--function-name $(PUBLISH_MALWARE_LAMBDA_NAME) \
	--region $(REGION) \
	--statement-id sns \
	--action lambda:InvokeFunction \
	--principal sns.amazonaws.com \
	--source-arn $(SCAN_RESULT_TOPIC_ARN)

update-function-code: zip
	aws lambda update-function-code \
	--function-name $(FUNCTION_NAME) \
	--zip-file fileb://zip/send-malware-to-sns.zip
